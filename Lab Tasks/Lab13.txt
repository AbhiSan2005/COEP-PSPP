1)
#include <stdio.h>
#define SIZE 16
typedef struct student {
        int mis;
        char name[32];
        float marks;
} student;

int tersearch_mis(student a[], int len, int mis) {
        int l = 0, h = len-1, m1, m2;
        while(l < h) {
                m1 = (l + h)/ 3;
                m2 = (2 * (l + h)) / 3;
                if(a[m1].mis == mis)
                        return m1;
                else if(a[m2].mis == mis)
                        return m2;
                else if(a[m1].mis > mis)
                        h = m1 - 1;
                else if(a[m1].mis < mis && a[m2].mis > mis) {
                        l = m1 + 1;
                        h = m2 - 1;
                }
                else
                        l = m2 + 1;
        }
        return -1;
}
int main() {
        student a[SIZE];
        int len = 0;
        int mis, ret;
        scanf("%d", &mis);
        while(len < SIZE && scanf("%d%s%f", &a[len].mis,
                        a[len].name, &a[len].marks) == 3)
                len++;
        ret = tersearch_mis(a, len, mis);
        if(ret == -1)
                printf("not found\n");
        else
                printf("%d %s %.2f\n", a[ret].mis, a[ret].name, a[ret].marks);
        return 0;
}

2)


3)
#include <stdio.h>
#define SIZE 16
typedef struct student {
        int mis;
        char name[32];
        float marks;
} student;
void print_records(student a[], int len) {
        int i;
        printf("-----array-------\n");
        for(i = 0; i < len; i++)
                printf("%d %s %.2f\n", a[i].mis,
                        a[i].name, a[i].marks);
}
int findithmin(student a[], int len, int i) {
        int min = a[i].mis;
        int minindex = i;
        for(int j = i + 1; j < len; j++)
                if(a[j].mis < min) {
                        min = a[j].mis;
                        minindex = j;
                }
        return minindex;
}
int findithmax(student a[], int len, int i) {
        int max = a[i].mis;
        int maxindex = i;
        for(int j = i + 1; j < len; j++)
                if(a[j].mis > max) {
                        max = a[j].mis;
                        maxindex = j;
                }
        return maxindex;
}
void selsort(student a[], int len) {
        student t;
        int min, max;
        for (int i = 0, j = len - 1; j > i; i++, j--) {
                min = findithmin(a, j+1, i);
                max = findithmax(a, j+1, i);
                t = a[i];
                a[i] = a[min];
                a[min] = t;
                t = a[j];
                a[j] = a[max];
                a[max] = t;
        }
        return;
}
int main() {
        student a[SIZE];
        int len = 0;
        while(len < SIZE && scanf("%d%s%f", &a[len].mis, a[len].name,
                        &a[len].marks) == 3)
                len++;
        print_records(a, len);
        selsort(a, len);
        print_records(a, len);
        return 0;
}

4)
#include <stdio.h>
#define SIZE 16
typedef struct student {
        int mis;
        char name[32];
        float marks;
} student;
void print_records(student a[], int len) {
        int i;
        printf("-----array-------\n");
        for(i = 0; i < len; i++)
                printf("%d %s %.2f\n", a[i].mis,
                        a[i].name, a[i].marks);
}
void insert(student a[], int len, int i){
        student t;
        t = a[i];
        while(i <= len - 2 && a[i + 1].mis < t.mis) {
                a[i] = a[i + 1];
                i++;
        }
        a[i] = t;
        return;
}
void inssort(student a[], int len) {
        int i;
        i = len - 2;
        while(i >= 0) {
                insert(a, len, i);
                i--;
        }
}
int main() {
        student a[SIZE];
        int len = 0;
        while(len < SIZE && scanf("%d%s%f", &a[len].mis, a[len].name,
                        &a[len].marks) == 3)
                len++;
        print_records(a, len);
        inssort(a, len);
        print_records(a, len);
        return 0;
}

5)
#include <stdio.h>
#define SIZE 16
typedef struct student {
        int mis;
        char name[32];
        float marks;
} student;
void print_records(student a[], int len) {
        int i;
        printf("-------------\n");
        for(i = 0; i < len; i++)
                printf("%d %s %.2f\n", a[i].mis,
                        a[i].name, a[i].marks);
}
void bubblesort(student a[], int len) {
        int i, count = 0;
        student t;
        for(int j = 0; j < len - 1; j++) {
                        i = len - 1;
                        count = 0;
                        while(i >= 1) {
                                if(a[i-1].mis > a[i].mis) {
                                        t = a[i-1];
                                        a[i-1] =a[i];
                                        a[i] = t;
                                        count++;
                                }
                                i--;
                        }
                        if(count == 0)
                                return;
        }
}
int main() {
        student a[SIZE];
        int len = 0;
        while(len < SIZE && scanf("%d%s%f", &a[len].mis,
                        a[len].name, &a[len].marks) == 3)
                len++;
        print_records(a, len);
        bubblesort(a, len);
        print_records(a, len);
        return 0;
}
